/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package com.globalsight.ling.docproc.extractor.html;
import com.globalsight.ling.docproc.extractor.html.HtmlObjects;
import com.globalsight.ling.docproc.extractor.html.IHtmlHandler;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 62:
         return jjStopAtPos(0, 80);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0x0L, 0x8000000000000000L
};
static final long[] jjbitVec1 = {
   0x0L, 0x0L, 0x0L, 0x4000000000000000L
};
static final long[] jjbitVec2 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0xbfffffffffffffffL & l) == 0L)
                     break;
                  kind = 79;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  kind = 79;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 79)
                        kind = 79;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_8(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_8(int pos, long active0)
{
   return jjMoveNfa_8(jjStopStringLiteralDfa_8(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_8()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_8(0x2000000000000000L);
      default :
         return jjMoveNfa_8(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_8(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa2_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(0, active0);
}
private int jjMoveStringLiteralDfa2_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(1, active0);
}
private int jjMoveStringLiteralDfa3_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(2, active0);
}
private int jjMoveStringLiteralDfa4_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(3, active0);
}
private int jjMoveStringLiteralDfa5_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(4, active0);
}
private int jjMoveStringLiteralDfa6_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(5, active0);
}
private int jjMoveStringLiteralDfa7_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(6, active0);
}
private int jjMoveStringLiteralDfa8_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 80:
      case 112:
         return jjMoveStringLiteralDfa9_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(7, active0);
}
private int jjMoveStringLiteralDfa9_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         return jjMoveStringLiteralDfa10_8(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_8(8, active0);
}
private int jjMoveStringLiteralDfa10_8(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(10, 61);
         break;
      default :
         break;
   }
   return jjStartNfa_8(9, active0);
}
private int jjMoveNfa_8(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1)
{
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 45:
         jjmatchedKind = 72;
         return jjMoveStringLiteralDfa1_4(0x80L);
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_4(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_4(active1, 0x80L);
      default :
         break;
   }
   return jjStartNfa_4(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_4(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_4(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(2, 71);
         break;
      default :
         break;
   }
   return jjStartNfa_4(1, 0L, active1);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffdfffffffffffL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     jjCheckNAdd(2);
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xffffdfffffffffffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  kind = 73;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 73)
                        kind = 73;
                     jjCheckNAdd(2);
                  }
                  break;
               case 2:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 62:
         return jjStopAtPos(0, 82);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0xbfffffffffffffffL & l) == 0L)
                     break;
                  kind = 81;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  kind = 81;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 81)
                        kind = 81;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_15()
{
   return jjMoveNfa_15(0, 0);
}
private int jjMoveNfa_15(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 20;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xbfffff7affffd9ffL & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     jjCheckNAddStates(0, 2);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(18, 19);
                  else if (curChar == 34)
                     jjCheckNAddStates(3, 5);
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xbfffff7affffd9ffL & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(0, 2);
                  break;
               case 3:
                  if (curChar == 37)
                     jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 8);
                  break;
               case 5:
                  if (curChar != 62)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(0, 2);
                  break;
               case 6:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 7:
                  if ((0x8400000000L & l) != 0L && kind > 32)
                     kind = 32;
                  break;
               case 8:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 9:
                  if (curChar == 34)
                     jjCheckNAddStates(3, 5);
                  break;
               case 10:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  break;
               case 11:
                  if (curChar == 37)
                     jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(12, 16);
                  break;
               case 13:
                  if (curChar == 62)
                     jjCheckNAddStates(3, 5);
                  break;
               case 14:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 15:
                  if (curChar == 34 && kind > 32)
                     kind = 32;
                  break;
               case 16:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 17:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 18:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 19:
                  if (curChar == 39 && kind > 32)
                     kind = 32;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(0, 2);
                  break;
               case 4:
                  jjAddStates(6, 7);
                  break;
               case 10:
                  jjAddStates(3, 5);
                  break;
               case 12:
                  jjAddStates(8, 9);
                  break;
               case 18:
                  jjAddStates(10, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 32)
                        kind = 32;
                     jjCheckNAddStates(0, 2);
                  }
                  break;
               case 2:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(0, 2);
                  break;
               case 4:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(6, 7);
                  break;
               case 10:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(3, 5);
                  break;
               case 12:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(8, 9);
                  break;
               case 18:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(10, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 20 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_11()
{
   return jjMoveNfa_11(0, 0);
}
private int jjMoveNfa_11(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 18;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0xffffffdfffffffffL & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(1);
                  break;
               case 17:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjstateSet[jjnewStateCnt++] = 17;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(1);
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(12, 15);
                  break;
               case 1:
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(12, 15);
                  break;
               case 3:
                  if ((0x4000000040L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 4:
               case 6:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 5:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0x10000000100000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 13:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAdd(17);
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(17);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 48)
                        kind = 48;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 18 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_9(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_9(int pos, long active0)
{
   return jjMoveNfa_9(jjStopStringLiteralDfa_9(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_9()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_9(0x800000000000000L);
      default :
         return jjMoveNfa_9(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_9(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa2_9(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_9(0, active0);
}
private int jjMoveStringLiteralDfa2_9(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_9(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 74:
      case 106:
         return jjMoveStringLiteralDfa3_9(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_9(1, active0);
}
private int jjMoveStringLiteralDfa3_9(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_9(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_9(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_9(2, active0);
}
private int jjMoveStringLiteralDfa4_9(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_9(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 86:
      case 118:
         return jjMoveStringLiteralDfa5_9(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_9(3, active0);
}
private int jjMoveStringLiteralDfa5_9(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_9(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_9(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_9(4, active0);
}
private int jjMoveStringLiteralDfa6_9(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_9(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStopAtPos(6, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_9(5, active0);
}
private int jjMoveNfa_9(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_12(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_12(int pos, long active0)
{
   return jjMoveNfa_12(jjStopStringLiteralDfa_12(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_12()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 52);
      case 41:
         return jjStopAtPos(0, 53);
      case 61:
         return jjStopAtPos(0, 54);
      case 62:
         return jjStopAtPos(0, 41);
      default :
         return jjMoveNfa_12(0, 0);
   }
}
private int jjMoveNfa_12(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 18;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 49)
                        kind = 49;
                     jjCheckNAdd(5);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(12, 13);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(7, 8);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 51)
                        kind = 51;
                     jjCheckNAdd(16);
                  }
                  else if ((0xbc4800000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                  }
                  break;
               case 1:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 62 && kind > 42)
                     kind = 42;
                  break;
               case 5:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAdd(5);
                  break;
               case 6:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 8:
                  if (curChar != 34)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(10, 8);
                  break;
               case 10:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 11:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 12:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 13:
                  if (curChar != 39)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(15, 13);
                  break;
               case 15:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddStates(19, 21);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAdd(16);
                  break;
               case 17:
                  if ((0xbc4800000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 49)
                        kind = 49;
                     jjCheckNAdd(5);
                  }
                  else if ((0x78000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                  }
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAdd(5);
                  break;
               case 7:
                  jjCheckNAddTwoStates(7, 8);
                  break;
               case 10:
                  jjCheckNAddStates(16, 18);
                  break;
               case 12:
                  jjCheckNAddTwoStates(12, 13);
                  break;
               case 15:
                  jjCheckNAddStates(19, 21);
                  break;
               case 17:
                  if ((0x78000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               case 7:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 10:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               case 12:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 15:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(19, 21);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 18 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 45:
         jjmatchedKind = 77;
         return jjMoveStringLiteralDfa1_3(0x1000L);
      case 60:
         jjmatchedKind = 75;
         return jjMoveStringLiteralDfa1_3(0x400L);
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_3(active1, 0x400L);
      case 45:
         return jjMoveStringLiteralDfa2_3(active1, 0x1000L);
      default :
         break;
   }
   return jjStartNfa_3(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_3(active1, 0x1400L);
      default :
         break;
   }
   return jjStartNfa_3(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa4_3(active1, 0x400L);
      case 62:
         if ((active1 & 0x1000L) != 0L)
            return jjStopAtPos(3, 76);
         break;
      default :
         break;
   }
   return jjStartNfa_3(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 45:
         if ((active1 & 0x400L) != 0L)
            return jjStopAtPos(4, 74);
         break;
      default :
         break;
   }
   return jjStartNfa_3(3, 0L, active1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xefffdfffffffffffL & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                     jjCheckNAdd(2);
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xefffdfffffffffffL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  kind = 78;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 78)
                        kind = 78;
                     jjCheckNAdd(2);
                  }
                  break;
               case 2:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_7(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_7(int pos, long active0, long active1)
{
   return jjMoveNfa_7(jjStopStringLiteralDfa_7(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_7()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_7(0x8000000000000000L);
      default :
         return jjMoveNfa_7(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_7(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa2_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 81:
      case 113:
         return jjMoveStringLiteralDfa5_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         return jjMoveStringLiteralDfa8_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 89:
      case 121:
         return jjMoveStringLiteralDfa9_7(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_7(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_7(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_7(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(9, 63);
         break;
      default :
         break;
   }
   return jjStartNfa_7(8, active0, 0L);
}
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_14(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_14(int pos, long active0)
{
   return jjMoveNfa_14(jjStopStringLiteralDfa_14(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_14()
{
   switch(curChar)
   {
      case 37:
         return jjMoveStringLiteralDfa1_14(0x8000000000L);
      case 60:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_14(0x3000000000L);
      case 61:
         return jjStopAtPos(0, 44);
      case 62:
         return jjStopAtPos(0, 38);
      default :
         return jjMoveNfa_14(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_14(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_14(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 37:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         break;
      case 47:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         break;
      case 62:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         break;
      default :
         break;
   }
   return jjStartNfa_14(0, active0);
}
private int jjMoveNfa_14(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 43)
                        kind = 43;
                     jjCheckNAdd(5);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 1:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 62)
                     kind = 40;
                  break;
               case 5:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  kind = 43;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  kind = 43;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_16(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1c00000L) != 0L)
         {
            jjmatchedKind = 29;
            return 1;
         }
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 29;
            return 5;
         }
         return -1;
      case 1:
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 29;
            jjmatchedPos = 1;
            return 4;
         }
         if ((active0 & 0x1c00000L) != 0L)
         {
            jjmatchedKind = 29;
            jjmatchedPos = 1;
            return 1;
         }
         return -1;
      case 2:
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 2;
            return 13;
         }
         if ((active0 & 0x1c00000L) != 0L)
         {
            jjmatchedKind = 29;
            jjmatchedPos = 2;
            return 1;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 2;
            return 18;
         }
         return -1;
      case 3:
         if ((active0 & 0x1000000L) != 0L)
            return 1;
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 3;
            return 18;
         }
         if ((active0 & 0xc00000L) != 0L)
         {
            jjmatchedKind = 29;
            jjmatchedPos = 3;
            return 1;
         }
         return -1;
      case 4:
         if ((active0 & 0x800000L) != 0L)
            return 1;
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 4;
            return 18;
         }
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 29;
            jjmatchedPos = 4;
            return 1;
         }
         return -1;
      case 5:
         if ((active0 & 0x400000L) != 0L)
            return 1;
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 5;
            return 18;
         }
         return -1;
      case 6:
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 28;
            jjmatchedPos = 6;
            return 18;
         }
         if ((active0 & 0x2000000L) != 0L)
            return 18;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_16(int pos, long active0)
{
   return jjMoveNfa_16(jjStopStringLiteralDfa_16(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_16()
{
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_16(0x6000000L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa1_16(0x1000000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_16(0xc00000L);
      default :
         return jjMoveNfa_16(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_16(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_16(active0, 0x1000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_16(active0, 0x400000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_16(active0, 0x6000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_16(active0, 0x800000L);
      default :
         break;
   }
   return jjStartNfa_16(0, active0);
}
private int jjMoveStringLiteralDfa2_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 81:
      case 113:
         return jjMoveStringLiteralDfa3_16(active0, 0x2000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_16(active0, 0x400000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_16(active0, 0x4000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa3_16(active0, 0x1000000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa3_16(active0, 0x800000L);
      default :
         break;
   }
   return jjStartNfa_16(1, active0);
}
private int jjMoveStringLiteralDfa3_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_16(3, 24, 1);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_16(active0, 0x4000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_16(active0, 0x400000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_16(active0, 0x800000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_16(active0, 0x2000000L);
      default :
         break;
   }
   return jjStartNfa_16(2, active0);
}
private int jjMoveStringLiteralDfa4_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_16(4, 23, 1);
         return jjMoveStringLiteralDfa5_16(active0, 0x2000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_16(active0, 0x400000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_16(active0, 0x4000000L);
      default :
         break;
   }
   return jjStartNfa_16(3, active0);
}
private int jjMoveStringLiteralDfa5_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_16(active0, 0x4000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_16(active0, 0x2000000L);
      case 84:
      case 116:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_16(5, 22, 1);
         break;
      default :
         break;
   }
   return jjStartNfa_16(4, active0);
}
private int jjMoveStringLiteralDfa6_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_16(active0, 0x4000000L);
      case 89:
      case 121:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_16(6, 25, 18);
         break;
      default :
         break;
   }
   return jjStartNfa_16(5, active0);
}
private int jjMoveStringLiteralDfa7_16(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_16(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_16(7, 26, 18);
         break;
      default :
         break;
   }
   return jjStartNfa_16(6, active0);
}
private int jjStartNfaWithStates_16(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_16(state, pos + 1);
}
private int jjMoveNfa_16(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 18;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 13:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  break;
               case 18:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  break;
               case 0:
               case 1:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAdd(1);
                  break;
               case 5:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAdd(1);
                  break;
               case 4:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  break;
               case 17:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAdd(17);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 13:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 18:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(12, 15);
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAdd(17);
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAdd(17);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(12, 15);
                  break;
               case 3:
                  if ((0x4000000040L & l) != 0L && kind > 27)
                     kind = 27;
                  break;
               case 6:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 7:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0x10000000100000L & l) != 0L && kind > 27)
                     kind = 27;
                  break;
               case 14:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAdd(17);
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAdd(17);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 18 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_10(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_10(int pos, long active0)
{
   return jjMoveNfa_10(jjStopStringLiteralDfa_10(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_10()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_10(0x200000000000000L);
      default :
         return jjMoveNfa_10(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_10(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa2_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(0, active0);
}
private int jjMoveStringLiteralDfa2_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(1, active0);
}
private int jjMoveStringLiteralDfa3_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(2, active0);
}
private int jjMoveStringLiteralDfa4_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(3, active0);
}
private int jjMoveStringLiteralDfa5_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(4, active0);
}
private int jjMoveStringLiteralDfa6_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(5, active0);
}
private int jjMoveStringLiteralDfa7_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_10(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(6, active0);
}
private int jjMoveStringLiteralDfa8_10(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_10(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(8, 57);
         break;
      default :
         break;
   }
   return jjStartNfa_10(7, active0);
}
private int jjMoveNfa_10(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1)
{
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_6()
{
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa1_6(0xaL);
      default :
         return jjMoveNfa_6(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_6(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_6(active1, 0x8L);
      case 47:
         return jjMoveStringLiteralDfa2_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_6(active1, 0x8L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(3, 67);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 89:
      case 121:
         return jjMoveStringLiteralDfa5_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa6_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_6(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_6(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_6(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_6(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x2L) != 0L)
            return jjStopAtPos(7, 65);
         break;
      default :
         break;
   }
   return jjStartNfa_6(6, 0L, active1);
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_17(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xfe000L) != 0L)
            return 10;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_17(int pos, long active0)
{
   return jjMoveNfa_17(jjStopStringLiteralDfa_17(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_17()
{
   switch(curChar)
   {
      case 60:
         jjmatchedKind = 13;
         return jjMoveStringLiteralDfa1_17(0xfc000L);
      case 62:
         return jjStopAtPos(0, 21);
      default :
         return jjMoveNfa_17(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_17(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_17(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         if ((active0 & 0x20000L) != 0L)
         {
            jjmatchedKind = 17;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_17(active0, 0x18000L);
      case 37:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(1, 19);
         break;
      case 47:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         break;
      case 63:
         if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(1, 18);
         break;
      default :
         break;
   }
   return jjStartNfa_17(0, active0);
}
private int jjMoveStringLiteralDfa2_17(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_17(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_17(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_17(active0, 0x18000L);
      default :
         break;
   }
   return jjStartNfa_17(1, active0);
}
private int jjMoveStringLiteralDfa3_17(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_17(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_17(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 16;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_17(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_17(2, active0);
}
private int jjMoveStringLiteralDfa4_17(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_17(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_17(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(4, 15);
         break;
      default :
         break;
   }
   return jjStartNfa_17(3, active0);
}
private int jjMoveNfa_17(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 15;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xafffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 20)
                        kind = 20;
                     jjCheckNAddStates(22, 24);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 1:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar == 58)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0xafffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar != 62)
                     break;
                  kind = 20;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0xafffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(5);
                  break;
               case 11:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0xafffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAddStates(22, 24);
                  break;
               case 13:
                  if ((0xafffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(13);
                  break;
               case 14:
                  if ((0xafffffffffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(14, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAddStates(22, 24);
                  break;
               case 3:
                  jjAddStates(25, 26);
                  break;
               case 5:
                  if (kind > 20)
                     kind = 20;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 6:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 7:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 13:
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(13);
                  break;
               case 14:
                  jjCheckNAddTwoStates(14, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 20)
                        kind = 20;
                     jjCheckNAddStates(22, 24);
                  }
                  break;
               case 3:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(25, 26);
                  break;
               case 5:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 12:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAddStates(22, 24);
                  break;
               case 13:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(13);
                  break;
               case 14:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(14, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 15 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_13(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_13(int pos, long active0)
{
   return jjMoveNfa_13(jjStopStringLiteralDfa_13(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_13()
{
   switch(curChar)
   {
      case 61:
         return jjStopAtPos(0, 44);
      case 62:
         return jjStopAtPos(0, 41);
      default :
         return jjMoveNfa_13(0, 0);
   }
}
private int jjMoveNfa_13(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7ff600800000000L & l) != 0L)
                  {
                     if (kind > 43)
                        kind = 43;
                     jjCheckNAdd(5);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 34)
                        kind = 34;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 1:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 62)
                     kind = 42;
                  break;
               case 5:
                  if ((0x7ff600800000000L & l) == 0L)
                     break;
                  kind = 43;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  kind = 43;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1)
{
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_5()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_5(0x20L);
      default :
         return jjMoveNfa_5(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_5(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_5(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_5(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_5(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_5(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x20L) != 0L)
            return jjStopAtPos(2, 69);
         break;
      default :
         break;
   }
   return jjStartNfa_5(1, 0L, active1);
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 37:
         return jjMoveStringLiteralDfa1_0(0x80000L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x80000L) != 0L)
            return jjStopAtPos(1, 83);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, 0L, active1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   2, 6, 7, 10, 14, 15, 4, 8, 12, 16, 18, 19, 5, 11, 15, 16, 
   7, 10, 8, 12, 15, 13, 13, 14, 11, 3, 4, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 254:
         return ((jjbitVec0[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec1[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec4[i2] & l2) != 0L);
      default :
         if ((jjbitVec2[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
"\74", "\74\57", "\74\41\55\55\55", "\74\41\55\55", "\74\41", "\74\77", "\74\45", 
null, "\76", null, null, null, null, null, null, null, null, null, null, null, null, 
null, "\74", "\74\57", "\74\45", "\76", "\45\76", null, "\76", null, null, "\75", 
null, null, null, null, null, null, null, "\50", "\51", "\75", null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\55\55\76", "\55", null, "\74\41\55\55\55", "\74", "\55\55\55\76", "\55", null, null, 
"\76", null, "\76", "\45\76", null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "InXSPTag",
   "InProcessingInstruction",
   "InDeclaration",
   "InCfComment",
   "InComment",
   "InCommentedStyle",
   "InStyle",
   "InCFQuery",
   "InCFScript",
   "InJava",
   "InScript",
   "StartEmbeddedTag",
   "InCFExpression",
   "InCFTag",
   "InTag",
   "AttrVal",
   "StartTag",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, 16, 3, 4, 2, 1, 0, -1, -1, 14, 14, 14, 
   13, 13, 12, 13, 14, 17, -1, -1, -1, -1, 11, 11, 11, 17, -1, 17, -1, -1, -1, 15, -1, 12, 13, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 17, -1, 17, -1, 17, -1, 17, -1, 17, -1, 5, -1, 6, -1, 17, -1, -1, -1, 
   -1, -1, -1, -1, -1, 17, -1, 17, 17, -1, 
};
static final long[] jjtoToken = {
   0xfffffffb7ffff801L, 0x1fffa7L, 
};
static final long[] jjtoSkip = {
   0x480000000L, 0x40L, 
};
static final long[] jjtoSpecial = {
   0x480000000L, 0x40L, 
};
static final long[] jjtoMore = {
   0x0L, 0x18L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[20];
private final int[] jjstateSet = new int[40];
protected char curChar;
/** Constructor. */
public ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 20; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 18 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 17;
int defaultLexState = 17;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 84)
         {
            jjmatchedKind = 84;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         break;
       case 4:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         break;
       case 5:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_5();
         if (jjmatchedPos == 0 && jjmatchedKind > 68)
         {
            jjmatchedKind = 68;
         }
         break;
       case 6:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_6();
         if (jjmatchedPos == 0 && jjmatchedKind > 66)
         {
            jjmatchedKind = 66;
         }
         break;
       case 7:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_7();
         if (jjmatchedPos == 0 && jjmatchedKind > 64)
         {
            jjmatchedKind = 64;
         }
         break;
       case 8:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_8();
         if (jjmatchedPos == 0 && jjmatchedKind > 62)
         {
            jjmatchedKind = 62;
         }
         break;
       case 9:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_9();
         if (jjmatchedPos == 0 && jjmatchedKind > 60)
         {
            jjmatchedKind = 60;
         }
         break;
       case 10:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_10();
         if (jjmatchedPos == 0 && jjmatchedKind > 58)
         {
            jjmatchedKind = 58;
         }
         break;
       case 11:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_11();
         break;
       case 12:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_12();
         if (jjmatchedPos == 0 && jjmatchedKind > 56)
         {
            jjmatchedKind = 56;
         }
         break;
       case 13:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_13();
         if (jjmatchedPos == 0 && jjmatchedKind > 45)
         {
            jjmatchedKind = 45;
         }
         break;
       case 14:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_14();
         if (jjmatchedPos == 0 && jjmatchedKind > 45)
         {
            jjmatchedKind = 45;
         }
         break;
       case 15:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_15();
         if (jjmatchedPos == 0 && jjmatchedKind > 33)
         {
            jjmatchedKind = 33;
         }
         break;
       case 16:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_16();
         if (jjmatchedPos == 0 && jjmatchedKind > 30)
         {
            jjmatchedKind = 30;
         }
         break;
       case 17:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_17();
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
           }
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
