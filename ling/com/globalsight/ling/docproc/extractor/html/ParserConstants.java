/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package com.globalsight.ling.docproc.extractor.html;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALPHA_CHAR = 1;
  /** RegularExpression Id. */
  int NUM_CHAR = 2;
  /** RegularExpression Id. */
  int ALPHANUM_CHAR = 3;
  /** RegularExpression Id. */
  int IDENTIFIER_CHAR = 4;
  /** RegularExpression Id. */
  int IDENTIFIER = 5;
  /** RegularExpression Id. */
  int QUOTED_STRING = 6;
  /** RegularExpression Id. */
  int WRONGLY_QUOTED_STRING = 7;
  /** RegularExpression Id. */
  int QUOTED_CFSTRING = 8;
  /** RegularExpression Id. */
  int NEWLINE = 9;
  /** RegularExpression Id. */
  int WHITESPACE = 10;
  /** RegularExpression Id. */
  int UNICODE_BOM = 11;
  /** RegularExpression Id. */
  int CR_NEWLINE = 12;
  /** RegularExpression Id. */
  int TAG_START = 13;
  /** RegularExpression Id. */
  int ENDTAG_START = 14;
  /** RegularExpression Id. */
  int CFCOMMENT_START = 15;
  /** RegularExpression Id. */
  int COMMENT_START = 16;
  /** RegularExpression Id. */
  int DECL_START = 17;
  /** RegularExpression Id. */
  int PI_START = 18;
  /** RegularExpression Id. */
  int XSP_START = 19;
  /** RegularExpression Id. */
  int PCDATA = 20;
  /** RegularExpression Id. */
  int TAG_CLOSE = 21;
  /** RegularExpression Id. */
  int SCRIPT = 22;
  /** RegularExpression Id. */
  int STYLE = 23;
  /** RegularExpression Id. */
  int JAVA = 24;
  /** RegularExpression Id. */
  int CFQUERY = 25;
  /** RegularExpression Id. */
  int CFSCRIPT = 26;
  /** RegularExpression Id. */
  int CF_EXPRESSIONTAG_NAME = 27;
  /** RegularExpression Id. */
  int CF_TAG_NAME = 28;
  /** RegularExpression Id. */
  int TAG_NAME = 29;
  /** RegularExpression Id. */
  int LST_ERROR = 30;
  /** RegularExpression Id. */
  int ATTR_VALUE = 32;
  /** RegularExpression Id. */
  int LAV_ERROR = 33;
  /** RegularExpression Id. */
  int TAG_START_EMBEDDED = 35;
  /** RegularExpression Id. */
  int ENDTAG_START_EMBEDDED = 36;
  /** RegularExpression Id. */
  int XSP_START_EMBEDDED = 37;
  /** RegularExpression Id. */
  int TAG_END = 38;
  /** RegularExpression Id. */
  int TAG_END_XSP = 39;
  /** RegularExpression Id. */
  int TAG_END_CLOSE = 40;
  /** RegularExpression Id. */
  int CF_TAG_END = 41;
  /** RegularExpression Id. */
  int CF_TAG_END_CLOSE = 42;
  /** RegularExpression Id. */
  int ATTR_NAME = 43;
  /** RegularExpression Id. */
  int EQUAL = 44;
  /** RegularExpression Id. */
  int LIT_ERROR = 45;
  /** RegularExpression Id. */
  int CF_EXPRESSIONTAG_NAME1 = 46;
  /** RegularExpression Id. */
  int CF_TAG_NAME1 = 47;
  /** RegularExpression Id. */
  int XSP = 48;
  /** RegularExpression Id. */
  int CF_IDENTIFIER = 49;
  /** RegularExpression Id. */
  int CF_STRING = 50;
  /** RegularExpression Id. */
  int CF_NUMBER = 51;
  /** RegularExpression Id. */
  int CF_LPAREN = 52;
  /** RegularExpression Id. */
  int CF_RPAREN = 53;
  /** RegularExpression Id. */
  int CF_EQUAL = 54;
  /** RegularExpression Id. */
  int CF_OPER = 55;
  /** RegularExpression Id. */
  int CF_LIT_ERROR = 56;
  /** RegularExpression Id. */
  int SCRIPT_END = 57;
  /** RegularExpression Id. */
  int SCRIPT_TEXT = 58;
  /** RegularExpression Id. */
  int JAVA_END = 59;
  /** RegularExpression Id. */
  int JAVA_TEXT = 60;
  /** RegularExpression Id. */
  int CFSCRIPT_END = 61;
  /** RegularExpression Id. */
  int CFSCRIPT_TEXT = 62;
  /** RegularExpression Id. */
  int CFQUERY_END = 63;
  /** RegularExpression Id. */
  int CFQUERY_TEXT = 64;
  /** RegularExpression Id. */
  int STYLE_END = 65;
  /** RegularExpression Id. */
  int STYLE_TEXT = 66;
  /** RegularExpression Id. */
  int COMMENTED_STYLE_TEXT = 69;
  /** RegularExpression Id. */
  int COMMENT_END = 71;
  /** RegularExpression Id. */
  int DASH = 72;
  /** RegularExpression Id. */
  int COMMENT_WORD = 73;
  /** RegularExpression Id. */
  int CFCOMMENT_START1 = 74;
  /** RegularExpression Id. */
  int LESSTHAN = 75;
  /** RegularExpression Id. */
  int CFCOMMENT_END = 76;
  /** RegularExpression Id. */
  int DASH1 = 77;
  /** RegularExpression Id. */
  int COMMENT_WORD1 = 78;
  /** RegularExpression Id. */
  int DECL_ANY = 79;
  /** RegularExpression Id. */
  int DECL_END = 80;
  /** RegularExpression Id. */
  int PI_ANY = 81;
  /** RegularExpression Id. */
  int PI_END = 82;
  /** RegularExpression Id. */
  int XSP_END = 83;
  /** RegularExpression Id. */
  int XSP_TEXT = 84;

  /** Lexical state. */
  int InXSPTag = 0;
  /** Lexical state. */
  int InProcessingInstruction = 1;
  /** Lexical state. */
  int InDeclaration = 2;
  /** Lexical state. */
  int InCfComment = 3;
  /** Lexical state. */
  int InComment = 4;
  /** Lexical state. */
  int InCommentedStyle = 5;
  /** Lexical state. */
  int InStyle = 6;
  /** Lexical state. */
  int InCFQuery = 7;
  /** Lexical state. */
  int InCFScript = 8;
  /** Lexical state. */
  int InJava = 9;
  /** Lexical state. */
  int InScript = 10;
  /** Lexical state. */
  int StartEmbeddedTag = 11;
  /** Lexical state. */
  int InCFExpression = 12;
  /** Lexical state. */
  int InCFTag = 13;
  /** Lexical state. */
  int InTag = 14;
  /** Lexical state. */
  int AttrVal = 15;
  /** Lexical state. */
  int StartTag = 16;
  /** Lexical state. */
  int DEFAULT = 17;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ALPHA_CHAR>",
    "<NUM_CHAR>",
    "<ALPHANUM_CHAR>",
    "<IDENTIFIER_CHAR>",
    "<IDENTIFIER>",
    "<QUOTED_STRING>",
    "<WRONGLY_QUOTED_STRING>",
    "<QUOTED_CFSTRING>",
    "<NEWLINE>",
    "<WHITESPACE>",
    "<UNICODE_BOM>",
    "<CR_NEWLINE>",
    "\"<\"",
    "\"</\"",
    "\"<!---\"",
    "\"<!--\"",
    "\"<!\"",
    "\"<?\"",
    "\"<%\"",
    "<PCDATA>",
    "\">\"",
    "\"SCRIPT\"",
    "\"STYLE\"",
    "\"JAVA\"",
    "\"CFQUERY\"",
    "\"CFSCRIPT\"",
    "<CF_EXPRESSIONTAG_NAME>",
    "<CF_TAG_NAME>",
    "<TAG_NAME>",
    "<LST_ERROR>",
    "<token of kind 31>",
    "<ATTR_VALUE>",
    "<LAV_ERROR>",
    "<token of kind 34>",
    "\"<\"",
    "\"</\"",
    "\"<%\"",
    "\">\"",
    "\"%>\"",
    "<TAG_END_CLOSE>",
    "\">\"",
    "<CF_TAG_END_CLOSE>",
    "<ATTR_NAME>",
    "\"=\"",
    "<LIT_ERROR>",
    "<CF_EXPRESSIONTAG_NAME1>",
    "<CF_TAG_NAME1>",
    "<XSP>",
    "<CF_IDENTIFIER>",
    "<CF_STRING>",
    "<CF_NUMBER>",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "<CF_OPER>",
    "<CF_LIT_ERROR>",
    "\"</SCRIPT>\"",
    "<SCRIPT_TEXT>",
    "\"</JAVA>\"",
    "<JAVA_TEXT>",
    "\"</CFSCRIPT>\"",
    "<CFSCRIPT_TEXT>",
    "\"</CFQUERY>\"",
    "<CFQUERY_TEXT>",
    "\"</STYLE>\"",
    "<STYLE_TEXT>",
    "\"<!--\"",
    "<token of kind 68>",
    "\"-->\"",
    "<token of kind 70>",
    "\"-->\"",
    "\"-\"",
    "<COMMENT_WORD>",
    "\"<!---\"",
    "\"<\"",
    "\"--->\"",
    "\"-\"",
    "<COMMENT_WORD1>",
    "<DECL_ANY>",
    "\">\"",
    "<PI_ANY>",
    "\">\"",
    "\"%>\"",
    "<XSP_TEXT>",
  };

}
