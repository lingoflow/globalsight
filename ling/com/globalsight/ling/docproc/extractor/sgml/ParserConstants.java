/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package com.globalsight.ling.docproc.extractor.sgml;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALPHA_CHAR = 1;
  /** RegularExpression Id. */
  int NUM_CHAR = 2;
  /** RegularExpression Id. */
  int ALPHANUM_CHAR = 3;
  /** RegularExpression Id. */
  int IDENTIFIER_CHAR = 4;
  /** RegularExpression Id. */
  int IDENTIFIER = 5;
  /** RegularExpression Id. */
  int QUOTED_STRING = 6;
  /** RegularExpression Id. */
  int WRONGLY_QUOTED_STRING = 7;
  /** RegularExpression Id. */
  int NEWLINE = 8;
  /** RegularExpression Id. */
  int WHITESPACE = 9;
  /** RegularExpression Id. */
  int UNICODE_BOM = 10;
  /** RegularExpression Id. */
  int CR_NEWLINE = 11;
  /** RegularExpression Id. */
  int TAG_START = 12;
  /** RegularExpression Id. */
  int ENDTAG_START = 13;
  /** RegularExpression Id. */
  int COMMENT_START = 14;
  /** RegularExpression Id. */
  int DECL_START = 15;
  /** RegularExpression Id. */
  int PI_START = 16;
  /** RegularExpression Id. */
  int PCDATA = 17;
  /** RegularExpression Id. */
  int TAG_NAME = 18;
  /** RegularExpression Id. */
  int LST_ERROR = 19;
  /** RegularExpression Id. */
  int ATTR_VALUE = 21;
  /** RegularExpression Id. */
  int LAV_ERROR = 22;
  /** RegularExpression Id. */
  int TAG_END = 24;
  /** RegularExpression Id. */
  int TAG_END_CLOSE = 25;
  /** RegularExpression Id. */
  int ATTR_NAME = 26;
  /** RegularExpression Id. */
  int EQUAL = 27;
  /** RegularExpression Id. */
  int LIT_ERROR = 28;
  /** RegularExpression Id. */
  int COMMENT_END = 30;
  /** RegularExpression Id. */
  int DASH = 31;
  /** RegularExpression Id. */
  int COMMENT_WORD = 32;
  /** RegularExpression Id. */
  int DECL_ANY = 33;
  /** RegularExpression Id. */
  int DECL_END = 34;
  /** RegularExpression Id. */
  int PI_ANY = 35;
  /** RegularExpression Id. */
  int PI_END = 36;

  /** Lexical state. */
  int InProcessingInstruction = 0;
  /** Lexical state. */
  int InDeclaration = 1;
  /** Lexical state. */
  int InComment = 2;
  /** Lexical state. */
  int InTag = 3;
  /** Lexical state. */
  int AttrVal = 4;
  /** Lexical state. */
  int StartTag = 5;
  /** Lexical state. */
  int DEFAULT = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ALPHA_CHAR>",
    "<NUM_CHAR>",
    "<ALPHANUM_CHAR>",
    "<IDENTIFIER_CHAR>",
    "<IDENTIFIER>",
    "<QUOTED_STRING>",
    "<WRONGLY_QUOTED_STRING>",
    "<NEWLINE>",
    "<WHITESPACE>",
    "<UNICODE_BOM>",
    "<CR_NEWLINE>",
    "\"<\"",
    "\"</\"",
    "\"<!--\"",
    "\"<!\"",
    "\"<?\"",
    "<PCDATA>",
    "<TAG_NAME>",
    "<LST_ERROR>",
    "<token of kind 20>",
    "<ATTR_VALUE>",
    "<LAV_ERROR>",
    "<token of kind 23>",
    "\">\"",
    "<TAG_END_CLOSE>",
    "<ATTR_NAME>",
    "\"=\"",
    "<LIT_ERROR>",
    "<token of kind 29>",
    "\"-->\"",
    "\"-\"",
    "<COMMENT_WORD>",
    "<DECL_ANY>",
    "\">\"",
    "<PI_ANY>",
    "\">\"",
  };

}
