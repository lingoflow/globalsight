/*
 * SegmenterRegexps.java
 * This file has been automatically generated by Ant.
 * ***** DO NOT EDIT ***** 
 */

package com.globalsight.ling.docproc;

import com.sun.org.apache.regexp.internal.RE;
import com.sun.org.apache.regexp.internal.REProgram;

public class SegmenterRegexps
{

    // Pre-compiled regular expression '(^|[:space:])[:alpha:]\.[:space:]*$'
    public static char[] SINGLECHAR_PatternInstructions = 
    {
        0x007c, 0x0000, 0x0031, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0050, 0x0061, 0x0003, 0x0041, 0x0001, 0x0004, 0x002e, 
        0x007c, 0x0000, 0x000c, 0x0050, 0x0073, 0x0003, 0x007c, 
        0x0000, 0x0003, 0x0047, 0x0000, 0xfff7, 0x007c, 0x0000, 
        0x0003, 0x004e, 0x0000, 0x0003, 0x0024, 0x0000, 0x0003, 
        0x0045, 0x0000, 0x0000, 
    };

    public static RE SINGLECHAR_Pattern = new RE(new REProgram(SINGLECHAR_PatternInstructions));

    // Pre-compiled regular expression '(!|\?)$'
    public static char[] ENDINGPUNCT_PatternInstructions = 
    {
        0x007c, 0x0000, 0x001a, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0007, 0x0041, 0x0001, 0x000b, 0x0021, 0x007c, 
        0x0000, 0x0007, 0x0041, 0x0001, 0x0004, 0x003f, 0x0029, 
        0x0001, 0x0003, 0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 
        0x0000, 
    };

    public static RE ENDINGPUNCT_Pattern = new RE(new REProgram(ENDINGPUNCT_PatternInstructions));

    // Pre-compiled regular expression '(!|\?)[\x27|\x22][:space:]*$'
    public static char[] ENDINGPUNCT2_PatternInstructions = 
    {
        0x007c, 0x0000, 0x0035, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0007, 0x0041, 0x0001, 0x000b, 0x0021, 0x007c, 
        0x0000, 0x0007, 0x0041, 0x0001, 0x0004, 0x003f, 0x0029, 
        0x0001, 0x0003, 0x005b, 0x0003, 0x0009, 0x0027, 0x0027, 
        0x007c, 0x007c, 0x0022, 0x0022, 0x007c, 0x0000, 0x000c, 
        0x0050, 0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 0x0047, 
        0x0000, 0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 
        0x0003, 0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 0x0000, 
    };

    public static RE ENDINGPUNCT2_Pattern = new RE(new REProgram(ENDINGPUNCT2_PatternInstructions));

    // Pre-compiled regular expression '^(,|;|[:space:]*\(?[:lower:])'
    public static char[] STARTINGPUNCT2_PatternInstructions = 
    {
        0x007c, 0x0000, 0x003f, 0x005e, 0x0000, 0x0003, 0x0028, 
        0x0001, 0x0003, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0030, 0x002c, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0029, 0x003b, 0x007c, 0x0000, 0x0025, 0x007c, 0x0000, 
        0x000c, 0x0050, 0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 
        0x0047, 0x0000, 0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 
        0x0000, 0x0003, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0007, 0x0028, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 
        0x0003, 0x0050, 0x006c, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0045, 0x0000, 0x0000, 
    };

    public static RE STARTINGPUNCT2_Pattern = new RE(new REProgram(STARTINGPUNCT2_PatternInstructions));

    // Pre-compiled regular expression '^(,|;|!|\.|\?)'
    public static char[] STARTINGPUNCT3_PatternInstructions = 
    {
        0x007c, 0x0000, 0x002f, 0x005e, 0x0000, 0x0003, 0x0028, 
        0x0001, 0x0003, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0020, 0x002c, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0019, 0x003b, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0012, 0x0021, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x000b, 0x002e, 0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 
        0x0004, 0x003f, 0x0029, 0x0001, 0x0003, 0x0045, 0x0000, 
        0x0000, 
    };

    public static RE STARTINGPUNCT3_Pattern = new RE(new REProgram(STARTINGPUNCT3_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])[:digit:]+\.[:space:]*$'
    public static char[] ENDINGDIGITS_PatternInstructions = 
    {
        0x007c, 0x0000, 0x003d, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0050, 0x0064, 0x0003, 0x007c, 0x0000, 0x0006, 0x0047, 
        0x0000, 0xfffa, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 
        0x0003, 0x0041, 0x0001, 0x0004, 0x002e, 0x007c, 0x0000, 
        0x000c, 0x0050, 0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 
        0x0047, 0x0000, 0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 
        0x0000, 0x0003, 0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 
        0x0000, 
    };

    public static RE ENDINGDIGITS_Pattern = new RE(new REProgram(ENDINGDIGITS_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])(Dr|Prof|dipl|inform|ing|med|h\.c|z\.B|d\.h|ca|sog|bzw|ggf|zw)\.[:space:]*$'
    public static char[] ABBR_DE_PatternInstructions = 
    {
        0x007c, 0x0000, 0x00b4, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0028, 0x0002, 0x0003, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x007d, 0x0044, 0x0072, 0x007c, 0x0000, 0x000a, 
        0x0041, 0x0004, 0x0075, 0x0050, 0x0072, 0x006f, 0x0066, 
        0x007c, 0x0000, 0x000a, 0x0041, 0x0004, 0x006b, 0x0064, 
        0x0069, 0x0070, 0x006c, 0x007c, 0x0000, 0x000c, 0x0041, 
        0x0006, 0x0061, 0x0069, 0x006e, 0x0066, 0x006f, 0x0072, 
        0x006d, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x0055, 
        0x0069, 0x006e, 0x0067, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x004c, 0x006d, 0x0065, 0x0064, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x0043, 0x0068, 0x002e, 0x0063, 
        0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x003a, 0x007a, 
        0x002e, 0x0042, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 
        0x0031, 0x0064, 0x002e, 0x0068, 0x007c, 0x0000, 0x0008, 
        0x0041, 0x0002, 0x0028, 0x0063, 0x0061, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x0020, 0x0073, 0x006f, 0x0067, 
        0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x0017, 0x0062, 
        0x007a, 0x0077, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 
        0x000e, 0x0067, 0x0067, 0x0066, 0x007c, 0x0000, 0x0008, 
        0x0041, 0x0002, 0x0005, 0x007a, 0x0077, 0x0029, 0x0002, 
        0x0003, 0x0041, 0x0001, 0x0004, 0x002e, 0x007c, 0x0000, 
        0x000c, 0x0050, 0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 
        0x0047, 0x0000, 0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 
        0x0000, 0x0003, 0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 
        0x0000, 
    };

    public static RE ABBR_DE_Pattern = new RE(new REProgram(ABBR_DE_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])(Dr|Mr|Mrs|Ms|i\.e|e\.g|w\.r\.t|approx|ca|cf|vs)\.[:space:]*$'
    public static char[] ABBR_EN_PatternInstructions = 
    {
        0x007c, 0x0000, 0x0096, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0028, 0x0002, 0x0003, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x005f, 0x0044, 0x0072, 0x007c, 0x0000, 0x0008, 
        0x0041, 0x0002, 0x0057, 0x004d, 0x0072, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x004f, 0x004d, 0x0072, 0x0073, 
        0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x0046, 0x004d, 
        0x0073, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x003e, 
        0x0069, 0x002e, 0x0065, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x0035, 0x0065, 0x002e, 0x0067, 0x007c, 0x0000, 
        0x000b, 0x0041, 0x0005, 0x002c, 0x0077, 0x002e, 0x0072, 
        0x002e, 0x0074, 0x007c, 0x0000, 0x000c, 0x0041, 0x0006, 
        0x0021, 0x0061, 0x0070, 0x0070, 0x0072, 0x006f, 0x0078, 
        0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x0015, 0x0063, 
        0x0061, 0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x000d, 
        0x0063, 0x0066, 0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 
        0x0005, 0x0076, 0x0073, 0x0029, 0x0002, 0x0003, 0x0041, 
        0x0001, 0x0004, 0x002e, 0x007c, 0x0000, 0x000c, 0x0050, 
        0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 0x0047, 0x0000, 
        0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 
        0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 0x0000, 
    };

    public static RE ABBR_EN_Pattern = new RE(new REProgram(ABBR_EN_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])(dho|S|Sra|Srta|U|UU|Ud|Uds|V|Vd|Vds)\.[:space:]*$'
    public static char[] ABBR_ES_PatternInstructions = 
    {
        0x007c, 0x0000, 0x008f, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0028, 0x0002, 0x0003, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x0058, 0x0064, 0x0068, 0x006f, 0x007c, 0x0000, 
        0x0007, 0x0041, 0x0001, 0x004f, 0x0053, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x0048, 0x0053, 0x0072, 0x0061, 
        0x007c, 0x0000, 0x000a, 0x0041, 0x0004, 0x003f, 0x0053, 
        0x0072, 0x0074, 0x0061, 0x007c, 0x0000, 0x0007, 0x0041, 
        0x0001, 0x0035, 0x0055, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x002e, 0x0055, 0x0055, 0x007c, 0x0000, 0x0008, 
        0x0041, 0x0002, 0x0026, 0x0055, 0x0064, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x001e, 0x0055, 0x0064, 0x0073, 
        0x007c, 0x0000, 0x0007, 0x0041, 0x0001, 0x0015, 0x0056, 
        0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x000e, 0x0056, 
        0x0064, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x0006, 
        0x0056, 0x0064, 0x0073, 0x0029, 0x0002, 0x0003, 0x0041, 
        0x0001, 0x0004, 0x002e, 0x007c, 0x0000, 0x000c, 0x0050, 
        0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 0x0047, 0x0000, 
        0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 
        0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 0x0000, 
    };

    public static RE ABBR_ES_Pattern = new RE(new REProgram(ABBR_ES_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])(Dr\.|Prof\.|M\.|ex\.|[Bb]lvd\.|[Aa]v\.|r\.|ca\.|[Tt][e\u00e9]l\.|p\.d\.|[Ss]\.[Aa]\.)[:space:]*$'
    public static char[] ABBR_FR_PatternInstructions = 
    {
        0x007c, 0x0000, 0x00bf, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0028, 0x0002, 0x0003, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x008c, 0x0044, 0x0072, 0x002e, 0x007c, 0x0000, 
        0x000b, 0x0041, 0x0005, 0x0083, 0x0050, 0x0072, 0x006f, 
        0x0066, 0x002e, 0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 
        0x0078, 0x004d, 0x002e, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x0070, 0x0065, 0x0078, 0x002e, 0x007c, 0x0000, 
        0x0011, 0x005b, 0x0002, 0x0007, 0x0042, 0x0042, 0x0062, 
        0x0062, 0x0041, 0x0004, 0x0060, 0x006c, 0x0076, 0x0064, 
        0x002e, 0x007c, 0x0000, 0x000f, 0x005b, 0x0002, 0x0007, 
        0x0041, 0x0041, 0x0061, 0x0061, 0x0041, 0x0002, 0x004f, 
        0x0076, 0x002e, 0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 
        0x0047, 0x0072, 0x002e, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x003f, 0x0063, 0x0061, 0x002e, 0x007c, 0x0000, 
        0x0016, 0x005b, 0x0002, 0x0007, 0x0054, 0x0054, 0x0074, 
        0x0074, 0x005b, 0x0002, 0x0007, 0x0065, 0x0065, 0x00e9, 
        0x00e9, 0x0041, 0x0002, 0x0028, 0x006c, 0x002e, 0x007c, 
        0x0000, 0x000a, 0x0041, 0x0004, 0x0020, 0x0070, 0x002e, 
        0x0064, 0x002e, 0x007c, 0x0000, 0x0019, 0x005b, 0x0002, 
        0x0007, 0x0053, 0x0053, 0x0073, 0x0073, 0x0041, 0x0001, 
        0x0004, 0x002e, 0x005b, 0x0002, 0x0007, 0x0041, 0x0041, 
        0x0061, 0x0061, 0x0041, 0x0001, 0x0004, 0x002e, 0x0029, 
        0x0002, 0x0003, 0x007c, 0x0000, 0x000c, 0x0050, 0x0073, 
        0x0003, 0x007c, 0x0000, 0x0003, 0x0047, 0x0000, 0xfff7, 
        0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 0x0024, 
        0x0000, 0x0003, 0x0045, 0x0000, 0x0000, 
    };

    public static RE ABBR_FR_Pattern = new RE(new REProgram(ABBR_FR_PatternInstructions));

    // Pre-compiled regular expression '(^|[:space:])(Dr|Prof|dipl|vb|bvb|nl|Mr|Mvr|Mevr|Mej|t\.a\.v|o\.l\.v|i\.p\.v|d\.w\.z|o\.a|t\.e\.m|[Tt]el|blz|pag|St|ong|ca|V\.U|m\.b\.t|t\.g\.v|i\.v\.m|t\.o\.v|i\.s\.m|n\.a\.v|m\.a\.w|v\.a|tss)\.[:space:]*$'
    public static char[] ABBR_NL_PatternInstructions = 
    {
        0x007c, 0x0000, 0x016f, 0x0028, 0x0001, 0x0003, 0x007c, 
        0x0000, 0x0006, 0x005e, 0x0000, 0x0009, 0x007c, 0x0000, 
        0x0006, 0x0050, 0x0073, 0x0003, 0x0029, 0x0001, 0x0003, 
        0x0028, 0x0002, 0x0003, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x0138, 0x0044, 0x0072, 0x007c, 0x0000, 0x000a, 
        0x0041, 0x0004, 0x0130, 0x0050, 0x0072, 0x006f, 0x0066, 
        0x007c, 0x0000, 0x000a, 0x0041, 0x0004, 0x0126, 0x0064, 
        0x0069, 0x0070, 0x006c, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x011c, 0x0076, 0x0062, 0x007c, 0x0000, 0x0009, 
        0x0041, 0x0003, 0x0114, 0x0062, 0x0076, 0x0062, 0x007c, 
        0x0000, 0x0008, 0x0041, 0x0002, 0x010b, 0x006e, 0x006c, 
        0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x0103, 0x004d, 
        0x0072, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x00fb, 
        0x004d, 0x0076, 0x0072, 0x007c, 0x0000, 0x000a, 0x0041, 
        0x0004, 0x00f2, 0x004d, 0x0065, 0x0076, 0x0072, 0x007c, 
        0x0000, 0x0009, 0x0041, 0x0003, 0x00e8, 0x004d, 0x0065, 
        0x006a, 0x007c, 0x0000, 0x000b, 0x0041, 0x0005, 0x00df, 
        0x0074, 0x002e, 0x0061, 0x002e, 0x0076, 0x007c, 0x0000, 
        0x000b, 0x0041, 0x0005, 0x00d4, 0x006f, 0x002e, 0x006c, 
        0x002e, 0x0076, 0x007c, 0x0000, 0x000b, 0x0041, 0x0005, 
        0x00c9, 0x0069, 0x002e, 0x0070, 0x002e, 0x0076, 0x007c, 
        0x0000, 0x000b, 0x0041, 0x0005, 0x00be, 0x0064, 0x002e, 
        0x0077, 0x002e, 0x007a, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x00b3, 0x006f, 0x002e, 0x0061, 0x007c, 0x0000, 
        0x000b, 0x0041, 0x0005, 0x00aa, 0x0074, 0x002e, 0x0065, 
        0x002e, 0x006d, 0x007c, 0x0000, 0x000f, 0x005b, 0x0002, 
        0x0007, 0x0054, 0x0054, 0x0074, 0x0074, 0x0041, 0x0002, 
        0x0098, 0x0065, 0x006c, 0x007c, 0x0000, 0x0009, 0x0041, 
        0x0003, 0x0090, 0x0062, 0x006c, 0x007a, 0x007c, 0x0000, 
        0x0009, 0x0041, 0x0003, 0x0087, 0x0070, 0x0061, 0x0067, 
        0x007c, 0x0000, 0x0008, 0x0041, 0x0002, 0x007e, 0x0053, 
        0x0074, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x0076, 
        0x006f, 0x006e, 0x0067, 0x007c, 0x0000, 0x0008, 0x0041, 
        0x0002, 0x006d, 0x0063, 0x0061, 0x007c, 0x0000, 0x0009, 
        0x0041, 0x0003, 0x0065, 0x0056, 0x002e, 0x0055, 0x007c, 
        0x0000, 0x000b, 0x0041, 0x0005, 0x005c, 0x006d, 0x002e, 
        0x0062, 0x002e, 0x0074, 0x007c, 0x0000, 0x000b, 0x0041, 
        0x0005, 0x0051, 0x0074, 0x002e, 0x0067, 0x002e, 0x0076, 
        0x007c, 0x0000, 0x000b, 0x0041, 0x0005, 0x0046, 0x0069, 
        0x002e, 0x0076, 0x002e, 0x006d, 0x007c, 0x0000, 0x000b, 
        0x0041, 0x0005, 0x003b, 0x0074, 0x002e, 0x006f, 0x002e, 
        0x0076, 0x007c, 0x0000, 0x000b, 0x0041, 0x0005, 0x0030, 
        0x0069, 0x002e, 0x0073, 0x002e, 0x006d, 0x007c, 0x0000, 
        0x000b, 0x0041, 0x0005, 0x0025, 0x006e, 0x002e, 0x0061, 
        0x002e, 0x0076, 0x007c, 0x0000, 0x000b, 0x0041, 0x0005, 
        0x001a, 0x006d, 0x002e, 0x0061, 0x002e, 0x0077, 0x007c, 
        0x0000, 0x0009, 0x0041, 0x0003, 0x000f, 0x0076, 0x002e, 
        0x0061, 0x007c, 0x0000, 0x0009, 0x0041, 0x0003, 0x0006, 
        0x0074, 0x0073, 0x0073, 0x0029, 0x0002, 0x0003, 0x0041, 
        0x0001, 0x0004, 0x002e, 0x007c, 0x0000, 0x000c, 0x0050, 
        0x0073, 0x0003, 0x007c, 0x0000, 0x0003, 0x0047, 0x0000, 
        0xfff7, 0x007c, 0x0000, 0x0003, 0x004e, 0x0000, 0x0003, 
        0x0024, 0x0000, 0x0003, 0x0045, 0x0000, 0x0000, 
    };

    public static RE ABBR_NL_Pattern = new RE(new REProgram(ABBR_NL_PatternInstructions));

}
